% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{testModuleScore}
\alias{testModuleScore}
\title{Calculate module score from a list of genes}
\usage{
testModuleScore(
  expMatrix,
  genes.list = NULL,
  genes.pool = NULL,
  n.bin = 25,
  seed.use = 1,
  ctrl.size = 100,
  enrich.name = "Cluster",
  uniqueOnly = T
)
}
\arguments{
\item{expMatrix}{Normalized count matrix, can be generated by calling \code{\link[Seurat]{GetAssayData}}}

\item{genes.list}{List of genes to query for module score (default: NULL)}

\item{genes.pool}{Genes from which control genes can be pulled from (not used by default, therefore all genes are fair game)}

\item{n.bin}{Number of average expression bins to divide the data over (default: 25)}

\item{seed.use}{Seed (default: 1)}

\item{ctrl.size}{Number of control genes per query gene (default: 100)}

\item{enrich.name}{Name of output module score(s) (default: "Cluster")}

\item{uniqueOnly}{Should control genes lists be unique? (default: TRUE)}
}
\value{
Dataframe containing calculated module score(s)
}
\description{
This is an identical method to that implemented in Seurat by \code{\link[Seurat]{AddModuleScore}}, but with the ability to ensure that the control genes per query gene are unique
}
\examples{
\dontrun{
paneth.genes <- c("DEFA6","PLA2G2A","PRSS2","REG3A","ITLN2","defa5-ires2-dsred")
paneth.score <- testModuleScore(Seurat::GetAssayData(srat),
                                genes.list = list(paneth.genes), uniqueOnly = F, ctrl.size = 100)}
}
\author{
Tito Candelli
}
